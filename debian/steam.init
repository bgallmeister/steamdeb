#!/bin/sh
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi
### BEGIN INIT INFO
# Provides:          steam
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: H2O Steam platform
# Description:       H2O Steam platform
#                    <...>
#                    <...>
### END INIT INFO

# Author: Steam Team <steam@h2o.ai>
# Code "leveraged" from other init.d scripts.

set -e

PATH=/bin:/usr/bin:/sbin:/usr/sbin
DESC="steam"
H2ODIR=/opt/h2oai
DAEMON=$H2ODIR/steam

# This is an example to start a single forking daemon capable of writing
# a pid file. To get other behaviors, implement do_start(), do_stop() or
# other functions to override the defaults in /lib/init/init-d-script.
# See also init-d-script(5)

STEAM_USER=steam
STEAM_GROUP=steam
STEAM_TMP_DIR=$H2ODIR/tmp
PIDFILE=$STEAM_TMP_DIR/steam.pid

test -x $DAEMON || exit 0

. /lib/lsb/init-functions

case "$1" in
  start)
	log_daemon_msg "Starting h2o steam" "steam"
	if ! test -d $STEAM_TMP_DIR; then
		mkdir -p $STEAM_TMP_DIR
		chown -R $STEAM_USER:$STEAM_GROUP $STEAM_TMP_DIR
	fi
	start_daemon -p $PIDFILE $DAEMON serve master --working-directory=$H2ODIR/var/master --superuser-name=admin --superuser-password=ineedtochangethepassword
	log_end_msg $?
    ;;
  stop)
	log_daemon_msg "Stopping h2o steam" "steam"
	killproc -p $PIDFILE $DAEMON
	log_end_msg $?
    ;;
  status)
	if pidofproc -p $PIDFILE $DAEMON >/dev/null 2>&1; then
	    echo "$DAEMON is running";
	    exit 0;
	else
	    echo "$DAEMON is NOT running";
	    if test -f $PIDFILE; then exit 2; fi
	    exit 3;
	fi
    ;;
  force-reload|restart)
    $0 stop
    $0 start
    ;;
  *)
    echo "Usage: /etc/init.d/steam {start|stop|restart|force-reload}"
    exit 1
    ;;
esac

exit 0
